package persistence.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import persistence.sql.dialect.H2Dialect;

import java.lang.reflect.Field;

import static org.junit.jupiter.api.Assertions.*;

public class EntityColumnUnitTest {
    private Field idField;

    private Field nameField;

    private Field emailField;

    private Field ageField;

    @BeforeEach
    void setUp() throws NoSuchFieldException {
        idField = UnitTestEntity.class.getDeclaredField("id");
        nameField = UnitTestEntity.class.getDeclaredField("name");
        emailField = UnitTestEntity.class.getDeclaredField("email");
        ageField = UnitTestEntity.class.getDeclaredField("age");
    }

    @Test
    @DisplayName("@Column 어노테이션이 없는 필드는 default null 컬럼이다.")
    void testDefaultNullWithoutColumnAnnotation() {
        assertTrue(EntityColumn.build(ageField, new H2Dialect()).isNullable());
    }

    @Test
    @DisplayName("@Column 어노테이션이 있고 null 키에 대한 값이 없는 필드는 default null 컬럼이다.")
    void testDefaultNullWithColumnAnnotation() {
        assertTrue(EntityColumn.build(emailField, new H2Dialect()).isNullable());
    }

    @Test
    @DisplayName("@Column 어노테이션이 있고 null = false인 필드는 not null이다.")
    void testNotNullWithColumnAnnotation() {
        assertFalse(EntityColumn.build(nameField, new H2Dialect()).isNullable());
    }

    @Test
    @DisplayName("@Id 어노테이션이 있으면 PK이다.")
    void testPrimaryWithIdAnnotation() {
        assertAll(
                () -> assertTrue(EntityColumn.build(idField, new H2Dialect()).isPrimary()),
                () -> assertFalse(EntityColumn.build(nameField, new H2Dialect()).isPrimary()),
                () -> assertFalse(EntityColumn.build(emailField, new H2Dialect()).isPrimary()),
                () -> assertFalse(EntityColumn.build(ageField, new H2Dialect()).isPrimary())
        );
    }

    @Test
    @DisplayName("@GeneratedValue 어노테이션이 있고 GenerationType이 Identity면 값이 자동으로 생성되는 컬럼이다.")
    void testAutoGeneratedIdentityWithGeneratedValueAnnotation() {
        assertAll(
                () -> assertTrue(EntityColumn.build(idField, new H2Dialect()).isAutoGeneratedIdentity()),
                () -> assertFalse(EntityColumn.build(nameField, new H2Dialect()).isAutoGeneratedIdentity()),
                () -> assertFalse(EntityColumn.build(emailField, new H2Dialect()).isAutoGeneratedIdentity()),
                () -> assertFalse(EntityColumn.build(ageField, new H2Dialect()).isAutoGeneratedIdentity())
        );
    }
}
